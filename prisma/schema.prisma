generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String             @id @unique
  externalId    String?            @unique
  name          String
  email         String             @unique
  contact       String             @unique
  password      String
  status        UserStatus         @default(INACTIVE)
  loans         Loan[]
  repayments    Repayment[]
  createdAt     DateTime           @default(now())
  role          UserRole           @default(CUSTOMER)
  inventory     InventoryItem[]
  paymentMethod UserPaymentMethod?
  identity      UserIdentity?
}

model UserIdentity {
  id               String   @id @default(cuid())
  dateOfBirth      DateTime
  documents        String[] // passport, statement etc.
  residencyAddress String
  stateResidency   String
  nextOfKinName    String
  nextOfKinContact String
  createdAt        DateTime @default(now())

  user   User?   @relation(fields: [userId], references: [id])
  userId String? @unique
}

model UserPaymentMethod {
  id            String @id @default(cuid())
  bankName      String
  accountNumber String
  accountName   String

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model Loan {
  id String @id

  amount Decimal @db.Decimal(10, 2)

  status   LoanStatus   @default(PENDING)
  loanType LoanType     @default(CASH)
  category LoanCategory

  disbursementDate DateTime?
  loanTenure       Int
  dueDate          DateTime?

  borrower   User        @relation(fields: [borrowerId], references: [id])
  borrowerId String
  repayments Repayment[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt

  asset   InventoryItem? @relation(fields: [assetId], references: [id])
  assetId String?
}

model Repayment {
  id         String   @id @default(cuid())
  amount     Decimal  @db.Decimal(10, 2)
  netPay     Decimal  @db.Decimal(10, 2)
  period     String
  periodInDT DateTime
  grade      String
  step       Int
  command    String
  createdAt  DateTime @default(now())

  user   User?   @relation(fields: [userId], references: [externalId])
  userId String?

  loan   Loan   @relation(fields: [loanId], references: [id])
  loanId String
}

model InventoryItem {
  id          String   @id @default(cuid())
  name        String // e.g., "Samsung TV 32'"
  description String?
  category    String // Electronics, Appliances, etc.
  inStock     Int      @default(0)
  threshold   Int      @default(10) // Low-stock alert level
  vendor      User     @relation(fields: [vendorId], references: [id])
  vendorId    String
  price       Decimal  @db.Decimal(10, 2)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  loans       Loan[]
}

enum UserRole {
  ADMIN
  CUSTOMER
  VENDOR
  SUPER_ADMIN
  VIEW_ADMIN
}

enum UserStatus {
  ACTIVE
  INACTIVE
  FLAGGED
}

enum LoanType {
  CASH
  COMMODITY
}

enum LoanCategory {
  EDUCATION
  PERSONAL
  BUSINESS
  MEDICAL
  RENT
  TRAVEL
  AGRICULTURE
  UTILITIES
  EMERGENCY
  ASSET_PURCHASE
  OTHERS
}

enum LoanStatus {
  PENDING
  APPROVED
  DISBURSED
  REJECTED
  REPAID
  DEFAULTED
}

enum RepaymentMethod {
  CARD
  TRANSFER
  USSD
  WALLET
}

enum RepaymentStatus {
  PENDING
  SUCCESS
  FAILED
}
