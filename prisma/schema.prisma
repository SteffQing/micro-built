generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String       @id @unique // Generated in backend as MBxxxx
  name           String
  email          String       @unique
  password       String
  status         UserStatus   @default(ACTIVE)
  loans          Loan[]
  createdAt      DateTime     @default(now())
  role           UserRole     @default(CUSTOMER)
  identity       UserIdentity @relation(fields: [userIdentityId], references: [id])
  userIdentityId String
}

model UserIdentity {
  id               String   @id @default(cuid())
  contact          String
  firstName        String
  lastName         String
  dateOfBirth      DateTime
  documents        String[]
  residencyAddress String
  stateResidency   String
  nextOfKinName    String
  nextOfKinContact String
  createdAt        DateTime @default(now())
  User             User[]
}

model Settings {
  id               String  @id @default(cuid())
  baseInterestRate Decimal @db.Decimal(5, 4)
}

model Loan {
  id String @id

  amount       Decimal @db.Decimal(10, 2)
  interestRate Decimal @db.Decimal(5, 4)
  lateFeeRate  Decimal @db.Decimal(5, 4)
  revenue      Decimal @default(0) @db.Decimal(10, 2)

  status   LoanStatus   @default(PENDING)
  loanType LoanType     @default(CASH)
  category LoanCategory

  disbursementDate DateTime?
  dueDate          DateTime

  borrower   User        @relation(fields: [borrowerId], references: [id])
  borrowerId String
  repayments Repayment[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Repayment {
  id        String          @id @default(cuid())
  amount    Decimal         @db.Decimal(10, 2)
  method    RepaymentMethod
  status    RepaymentStatus @default(PENDING)
  paidAt    DateTime?
  reference String?
  loan      Loan            @relation(fields: [loanId], references: [id])
  loanId    String
  createdAt DateTime        @default(now())
}

enum UserRole {
  ADMIN
  CUSTOMER
}

enum UserStatus {
  ACTIVE
  INACTIVE
  FLAGGED
}

enum LoanType {
  CASH
  ASSET
}

enum LoanCategory {
  EDUCATION
  PERSONAL
  BUSINESS
  MEDICAL
  RENT
  TRAVEL
  AGRICULTURE
  UTILITIES // Electricity, internet, etc.
  EMERGENCY
  ASSET_PURCHASE // Phones, laptops, furniture (linked to inventory maybe)
  OTHERS
}

enum LoanStatus {
  PENDING
  APPROVED
  DISBURSED
  REJECTED
  REPAID
  DEFAULTED
}

enum RepaymentMethod {
  CARD
  TRANSFER
  USSD
  WALLET
}

enum RepaymentStatus {
  PENDING
  SUCCESS
  FAILED
}
